"""remove_location_from_appointments

Revision ID: 0fa05a0aefe2
Revises: a12b34c56d78
Create Date: 2025-08-11 23:17:00.194870

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0fa05a0aefe2'
down_revision = 'a12b34c56d78'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vaccinations')
    op.alter_column('appointments', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('appointments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.drop_constraint(op.f('appointments_user_id_foreign'), 'appointments', type_='foreignkey')
    op.drop_constraint(op.f('appointments_pet_id_foreign'), 'appointments', type_='foreignkey')
    op.create_foreign_key(None, 'appointments', 'pets', ['pet_id'], ['id'])
    op.create_foreign_key(None, 'appointments', 'users', ['user_id'], ['id'])
    op.drop_column('appointments', 'location')
    op.drop_column('pets', 'photo_url')
    op.drop_column('pets', 'user_id')
    op.alter_column('service_requests', 'request_id',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('service_requests', 'client_phone',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('service_requests', 'preferred_time',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('service_requests', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=255),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('service_requests', 'status',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('service_requests', 'preferred_time',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.alter_column('service_requests', 'client_phone',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.alter_column('service_requests', 'request_id',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.add_column('pets', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('pets', sa.Column('photo_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('appointments', sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'appointments', type_='foreignkey')
    op.drop_constraint(None, 'appointments', type_='foreignkey')
    op.create_foreign_key(op.f('appointments_pet_id_foreign'), 'appointments', 'pets', ['pet_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('appointments_user_id_foreign'), 'appointments', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.alter_column('appointments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('appointments', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_table('vaccinations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vaccine_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('vaccination_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('next_due_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('veterinarian', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], name=op.f('vaccinations_pet_id_foreign'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('vaccinations_pkey'))
    )
    # ### end Alembic commands ### 