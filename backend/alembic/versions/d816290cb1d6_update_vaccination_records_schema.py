"""update_vaccination_records_schema

Revision ID: d816290cb1d6
Revises: 8f8921546fe7
Create Date: 2025-08-15 18:30:41.421736

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd816290cb1d6'
down_revision = '8f8921546fe7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip column type changes since database already has correct structure
    # op.drop_column('pets', 'photo_url')
    # op.alter_column('vaccination_records', 'user_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=True)
    # op.alter_column('vaccination_records', 'vaccination_date',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Date(),
    #            existing_nullable=False)
    # op.alter_column('vaccination_records', 'expiration_date',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Date(),
    #            existing_nullable=True)
    # op.alter_column('vaccination_records', 'next_vaccination_date',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Date(),
    #            existing_nullable=True)
    # op.alter_column('vaccination_records', 'veterinarian',
    #            existing_type=sa.VARCHAR(),
    #            nullable=False)
    # op.alter_column('vaccination_records', 'created_at',
    #            existing_type=postgresql.TIMESTAMP(),
    #            type_=sa.DateTime(timezone=True),
    #            existing_nullable=True)
    # op.alter_column('vaccination_records', 'updated_at',
    #            existing_type=postgresql.TIMESTAMP(),
    #            type_=sa.DateTime(timezone=True),
    #            existing_nullable=True)
    # op.create_foreign_key(None, 'vaccination_records', 'pets', ['pet_id'], ['id'])
    # op.create_foreign_key(None, 'vaccination_records', 'users', ['user_id'], ['id'])
    pass  # Database already has correct structure
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vaccination_records', type_='foreignkey')
    op.drop_constraint(None, 'vaccination_records', type_='foreignkey')
    op.alter_column('vaccination_records', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('vaccination_records', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('vaccination_records', 'veterinarian',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('vaccination_records', 'next_vaccination_date',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('vaccination_records', 'expiration_date',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('vaccination_records', 'vaccination_date',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('vaccination_records', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('pets', sa.Column('photo_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    # ### end Alembic commands ### 